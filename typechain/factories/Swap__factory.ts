/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Swap, SwapInterface } from "../Swap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_VISR",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapVISR",
    type: "event",
  },
  {
    inputs: [],
    name: "VISR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "changeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "send",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b23380380610b2383398101604081905261002f91610115565b6001600160a01b03831661005e5760405162461bcd60e51b8152600401610055906101c5565b60405180910390fd5b6001600160a01b0382166100845760405162461bcd60e51b81526004016100559061018e565b6001600160a01b0381166100aa5760405162461bcd60e51b815260040161005590610157565b600080546001600160a01b039485166001600160a01b031991821681179092556001805482169092179091556002805492851692821692909217909155600380549290931691161790556101fc565b80516001600160a01b038116811461011057600080fd5b919050565b600080600060608486031215610129578283fd5b610132846100f9565b9250610140602085016100f9565b915061014e604085016100f9565b90509250925092565b60208082526018908201527f5f564953522073686f756c64206265206e6f6e2d7a65726f0000000000000000604082015260600190565b6020808252601a908201527f5f726f757465722073686f756c64206265206e6f6e2d7a65726f000000000000604082015260600190565b60208082526019908201527f5f6f776e65722073686f756c64206265206e6f6e2d7a65726f00000000000000604082015260600190565b6109188061020b6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063dd95b9731161005b578063dd95b973146100db578063f2fde38b146100e3578063f887ea40146100f6578063f8fbd478146100fe57610088565b8063412664ae1461008d57806366d003ac146100a25780638da5cb5b146100c057806392c2bcb4146100c8575b600080fd5b6100a061009b3660046106f1565b610111565b005b6100aa6101cf565b6040516100b7919061075b565b60405180910390f35b6100aa6101de565b6100a06100d636600461061a565b6101ed565b6100aa61026c565b6100a06100f136600461061a565b61027b565b6100aa6102fa565b6100a061010c36600461063b565b610309565b6000546001600160a01b031633146101445760405162461bcd60e51b815260040161013b90610834565b60405180910390fd5b60015460405163a9059cbb60e01b81526001600160a01b038481169263a9059cbb92610178929091169085906004016107ad565b602060405180830381600087803b15801561019257600080fd5b505af11580156101a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ca919061071a565b505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b6000546001600160a01b031633146102175760405162461bcd60e51b815260040161013b90610834565b6001600160a01b03811661023d5760405162461bcd60e51b815260040161013b906107c6565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000546001600160a01b031633146102a55760405162461bcd60e51b815260040161013b90610834565b6001600160a01b0381166102cb5760405162461bcd60e51b815260040161013b906107fd565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6000546001600160a01b031633146103335760405162461bcd60e51b815260040161013b90610834565b6040516370a0823160e01b81526000906001600160a01b038516906370a082319061036290309060040161075b565b60206040518083038186803b15801561037a57600080fd5b505afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190610736565b600354604051636eb1769f60e11b815291925082916001600160a01b038088169263dd62ed3e926103e9923092169060040161076f565b60206040518083038186803b15801561040157600080fd5b505afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610736565b10156104c75760035460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392610473929091169085906004016107ad565b602060405180830381600087803b15801561048d57600080fd5b505af11580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c5919061071a565b505b6003546040805160a081019091528481526000916001600160a01b03169063c04b8d599060208101866104fa5730610507565b6001546001600160a01b03165b6001600160a01b031681526020014261271001815260200185815260200160008152506040518263ffffffff1660e01b8152600401610546919061086b565b602060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190610736565b90507f2a74fee11ab3c621208caf45f4052cc2bbb42b6353e0152f8afd4bbee0f0086385846105c757306105d4565b6001546001600160a01b03165b836040516105e493929190610789565b60405180910390a15050505050565b80356001600160a01b038116811461060a57600080fd5b919050565b803561060a816108fa565b60006020828403121561062b578081fd5b610634826105f3565b9392505050565b60008060006060848603121561064f578182fd5b610658846105f3565b925060208085013567ffffffffffffffff80821115610675578485fd5b818701915087601f830112610688578485fd5b81358181111561069457fe5b604051601f8201601f19168101850183811182821017156106b157fe5b60405281815283820185018a10156106c7578687fd5b8185850186830137908101909301949094525091506106e86040850161060f565b90509250925092565b60008060408385031215610703578182fd5b61070c836105f3565b946020939093013593505050565b60006020828403121561072b578081fd5b8151610634816108fa565b600060208284031215610747578081fd5b5051919050565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f5f726563697069656e742073686f756c64206265206e6f6e2d7a65726f000000604082015260600190565b6020808252601b908201527f6e65774f776e65722073686f756c64206265206e6f6e2d7a65726f0000000000604082015260600190565b6020808252600a908201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604082015260600190565b60006020808352835160a08285015280518060c0860152835b818110156108a05782810184015186820160e001528301610884565b818111156108b1578460e083880101525b5091850151916108c4604086018461074e565b6040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b801515811461090857600080fd5b5056fea164736f6c6343000706000a";

export class Swap__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _router: string,
    _VISR: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Swap> {
    return super.deploy(
      _owner,
      _router,
      _VISR,
      overrides || {}
    ) as Promise<Swap>;
  }
  getDeployTransaction(
    _owner: string,
    _router: string,
    _VISR: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _router, _VISR, overrides || {});
  }
  attach(address: string): Swap {
    return super.attach(address) as Swap;
  }
  connect(signer: Signer): Swap__factory {
    return super.connect(signer) as Swap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapInterface {
    return new utils.Interface(_abi) as SwapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swap {
    return new Contract(address, _abi, signerOrProvider) as Swap;
  }
}
